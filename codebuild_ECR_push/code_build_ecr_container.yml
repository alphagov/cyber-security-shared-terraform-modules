version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      # - echo Logging into Dockerhub...
      # - docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - echo Assuming role into target AWS account for deployment
      - role_arn="arn:aws:iam::${AWS_ACCOUNT_ID}:role/keycloak_concourse_role"
      - TF_DEPLOYER_ROLE=`aws sts assume-role --role-arn $role_arn --role-session-name concourse-task`
      - export AWS_ACCESS_KEY_ID=`echo "${TF_DEPLOYER_ROLE}" | jq -r '.Credentials.AccessKeyId'`
      - export AWS_SECRET_ACCESS_KEY=`echo "${TF_DEPLOYER_ROLE}" | jq -r '.Credentials.SecretAccessKey'`
      - export AWS_SESSION_TOKEN=`echo "${TF_DEPLOYER_ROLE}" | jq -r '.Credentials.SessionToken'`
      - aws sts get-caller-identity
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd $CODEBUILD_SRC_DIR
      - docker build -t ${ECR_IMAGE_REPO_NAME}:${ECR_IMAGE_TAG} $ECR_CONTEXT -f $ECR_DOCKERFILE
      - docker tag ${ECR_IMAGE_REPO_NAME}:${ECR_IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_IMAGE_REPO_NAME}:${ECR_IMAGE_TAG}
  post_build:
    commands:
      - aws sts get-caller-identity
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - # docker push $AWS_ACCOUNT_ID.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_IMAGE_REPO_NAME}:${ECR_IMAGE_TAG}
