version: 0.2

env:
  shell: bash

phases:
  pre_build:
    commands:
      - echo '[INFO] Copy artifacts'
      - copy_artifacts.py -j $COPY_ARTIFACTS
      - REPO=$(pwd | awk -F '/' '{print $NF}') # For the artefact name
      - echo '[INFO] Validate Terraform...'
      - cd $TERRAFORM_DIRECTORY
      - terraform init --backend=false
      - terraform validate
  build:
    commands:
      - echo '[INFO] Assuming TF Deployer IAM role...'
      - role_arn="arn:aws:iam::$AWS_ACCOUNT_ID:role/$ROLE_NAME"
      - source /usr/local/bin/sts-assume-role.sh "$role_arn" "$AWS_DEFAULT_REGION"
      - if [ -f "$BACKEND_VAR_FILE" ]; then
          terraform init -backend="$BACKEND_VAR_FILE";
        else
          terraform init;
        fi
      - # echo '[INFO] Not actually applying'
      - # terraform plan --out=/opt/terraform_$AWS_ACCOUNT_ID.plan
      - if [ -f "$APPLY_VAR_FILE" ]; then
          terraform apply --auto-approve -var-file="$APPLY_VAR_FILE";
        else
          terraform apply --auto-approve;
        fi
  post_build:
    commands:
      - echo '[INFO] Assuming TF Deployer IAM role...'
      - role_arn="arn:aws:iam::$AWS_ACCOUNT_ID:role/$ROLE_NAME"
      - source /usr/local/bin/sts-assume-role.sh "$role_arn" "$AWS_DEFAULT_REGION"
      - echo '[INFO] Writing Terraform output to a JSON file...'
      - terraform output -json > ${REPO}-${AWS_ACCOUNT_ID}.json

#artifacts:
 # name: TerraformPlanArtifacts
  #files:
   # - terraform_$AWS_ACCOUNT_ID.plan
  #discard-paths: no
  #base-directory: /opt
artifacts:
  files:
    - '**/*-$AWS_ACCOUNT_ID.json'
  base-directory: '$TERRAFORM_DIRECTORY'
  discard-paths: yes
